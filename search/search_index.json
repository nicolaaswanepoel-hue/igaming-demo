{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"iGaming Data Platform Starter","text":"<p>Local-only demo.</p>"},{"location":"architecture/","title":"Architecture","text":"<pre><code>flowchart LR\n  subgraph Sources\n    SQL[(SQL Source)]\n    KAFKA([Kafka / Redpanda])\n    FILES[[Provider CSV/JSON]]\n  end\n\n  SQL --&gt;|CDC| RAW[(Object Storage: s3://raw)]\n  KAFKA --&gt;|Stream| RAW\n  FILES --&gt; RAW\n\n  RAW --&gt; SILVER[(Clean/Conformed)]\n  SILVER --&gt; GOLD[(Curated Marts)]\n  GOLD --&gt; BI[BI / Dashboards]\n  GOLD --&gt; DS[Feature Store / ML]\n  GOLD --&gt; REG[Regulatory / Audited]\n</code></pre>"},{"location":"datasets/","title":"Datasets","text":"<ul> <li><code>data/seed/players.csv</code></li> <li><code>data/seed/games.csv</code></li> <li><code>data/seed/bets.csv</code></li> </ul>"},{"location":"local/","title":"Local-Only Demo","text":""},{"location":"local/#services","title":"Services","text":"<ul> <li>Postgres: <code>localhost:5432</code></li> <li>Redpanda Console: <code>http://localhost:8080</code></li> <li>MinIO: <code>http://localhost:9001</code></li> <li>Metabase: <code>http://localhost:3000</code></li> </ul>"},{"location":"local/#flow","title":"Flow","text":"<p>1) Seed SQL (<code>players</code>, <code>games</code>, <code>bets</code>). 2) Stream synthetic bet events to Kafka. 3) Consume Kafka \u2192 write Parquet to MinIO partitioned by date/game_type. 4) (Optional) Compact small files using DuckDB. 5) Transform with dbt (DuckDB default) and explore via Metabase.</p>"},{"location":"quickstart/","title":"Quickstart","text":"<pre><code>docker compose up -d\npython3 ingestion/load_sql.py\npython3 ingestion/push_kafka.py\npython3 ingestion/stream_to_minio.py   # keep running for streaming demo\npython3 ingestion/compact_parquet.py   # optional compaction\ncd transformations/dbt_project &amp;&amp; dbt deps &amp;&amp; dbt seed &amp;&amp; dbt run &amp;&amp; dbt test\n</code></pre>"}]}